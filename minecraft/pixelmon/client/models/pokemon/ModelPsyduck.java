// Date: 8/5/2012 9:26:56 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX
package pixelmon.client.models.pokemon;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

import net.minecraftforge.client.model.AdvancedModelLoader;
import net.minecraftforge.client.model.IModelCustom;
import pixelmon.client.models.ModelCustomWrapper;
import pixelmon.client.models.PixelmonModelBase;
import pixelmon.client.models.PixelmonModelRenderer;
import pixelmon.client.models.animations.EnumArm;
import pixelmon.client.models.animations.EnumLeg;
import pixelmon.client.models.animations.EnumPhase;
import pixelmon.client.models.animations.ModuleArm;
import pixelmon.client.models.animations.ModuleHead;
import pixelmon.client.models.animations.ModuleLeg;
import pixelmon.client.models.animations.ModuleTail;
import pixelmon.client.models.animations.ModuleTailBasic;
import pixelmon.client.models.animations.SkeletonBase;
import pixelmon.client.models.animations.biped.SkeletonBiped;

public class ModelPsyduck extends ModelBase {
public class ModelPsyduck extends PixelmonModelBase {
	// fields
	ModelRenderer right_foot;
	ModelRenderer left_foot;
	ModelRenderer lower_body;
	ModelRenderer mid_body;
	ModelRenderer upper_body;
	ModelRenderer left_wing;
	ModelRenderer right_wing;
	ModelRenderer tail;
	ModelRenderer HEADBASE;
	ModelRenderer hair_right;
	ModelRenderer hair_left;
	ModelRenderer hair_middle;
	ModelRenderer bill;
	ModelRenderer head;

	PixelmonModelRenderer Body, Lleg, RLeg;

	public ModelPsyduck() {
		textureWidth = 64;
		textureHeight = 32;
		setTextureOffset("HEADBASE.delete", 0, 0);

		Body = new PixelmonModelRenderer(this, "Body");
		Body.setRotationPoint(0, 24.1f, 0);
		Body.addCustomModel(new ModelCustomWrapper(AdvancedModelLoader.loadModel("/pixelmon/client/models/objFiles/psyduck/Body.obj")));

		right_foot = new ModelRenderer(this, 24, 18);
		right_foot.addBox(-2F, 0F, -4F, 3, 1, 5);
		right_foot.setRotationPoint(3F, 23F, 0F);
		right_foot.setTextureSize(64, 32);
		right_foot.mirror = true;
		setRotation(right_foot, 0F, -0.3490659F, 0F);
		left_foot = new ModelRenderer(this, 24, 12);
		left_foot.addBox(-1F, 0F, -4F, 3, 1, 5);
		left_foot.setRotationPoint(-3F, 23F, 0F);
		left_foot.setTextureSize(64, 32);
		left_foot.mirror = true;
		setRotation(left_foot, 0F, 0.3490659F, 0F);
		lower_body = new ModelRenderer(this, 0, 12);
		lower_body.addBox(-4F, 7F, -2F, 7, 1, 5);
		lower_body.setRotationPoint(0.5F, 15F, 0.5F);
		lower_body.setTextureSize(64, 32);
		lower_body.mirror = true;
		setRotation(lower_body, 0F, 0F, 0F);
		mid_body = new ModelRenderer(this, 0, 0);
		mid_body.addBox(-4F, -6F, -3F, 8, 6, 6);
		mid_body.setRotationPoint(0F, 22F, 1F);
		mid_body.setTextureSize(64, 32);
		mid_body.mirror = true;
		setRotation(mid_body, 0F, 0F, 0F);
		upper_body = new ModelRenderer(this, 0, 18);
		upper_body.addBox(-4F, 0F, -2F, 7, 1, 5);
		upper_body.setRotationPoint(0.5F, 15F, 0.5F);
		upper_body.setTextureSize(64, 32);
		upper_body.mirror = true;
		setRotation(upper_body, 0F, 0F, 0F);
		left_wing = new ModelRenderer(this, 0, 24);
		left_wing.addBox(-5F, 0F, -2F, 5, 1, 3);
		left_wing.setRotationPoint(-4F, 17F, 1.5F);
		left_wing.setTextureSize(64, 32);
		left_wing.mirror = true;
		setRotation(left_wing, 0F, 0F, -0.8552113F);
		right_wing = new ModelRenderer(this, 0, 28);
		right_wing.addBox(0F, 0F, -2F, 5, 1, 3);
		right_wing.setRotationPoint(4F, 17F, 1.5F);
		right_wing.setTextureSize(64, 32);
		right_wing.mirror = true;
		setRotation(right_wing, 0F, 0F, 0.8552113F);
		tail = new ModelRenderer(this, 28, 24);
		tail.addBox(-1F, -1F, 0F, 2, 1, 4);
		tail.setRotationPoint(0F, 21F, 4F);
		tail.setTextureSize(64, 32);
		tail.mirror = true;
		setRotation(tail, 0.2792527F, 0F, 0F);
		HEADBASE = new ModelRenderer(this, "HEADBASE");
		HEADBASE.setRotationPoint(0F, 15F, 1F);
		setRotation(HEADBASE, 0F, 0F, 0F);
		HEADBASE.mirror = true;
		hair_right = new ModelRenderer(this, 32, 9);
		hair_right.addBox(-3F, -5F, 2F, 1, 2, 0);
		hair_right.setRotationPoint(0F, 0F, 0F);
		hair_right.setTextureSize(64, 32);
		hair_right.mirror = true;
		setRotation(hair_right, 0F, 0F, 0.7853982F);
		hair_left = new ModelRenderer(this, 28, 9);
		hair_left.addBox(2F, -5F, 2F, 1, 2, 0);
		hair_left.setRotationPoint(0F, 0F, 0F);
		hair_left.setTextureSize(64, 32);
		hair_left.mirror = true;
		setRotation(hair_left, 0F, 0F, -0.7853982F);
		hair_middle = new ModelRenderer(this, 30, 9);
		hair_middle.addBox(-0.5F, -6F, 2F, 1, 2, 0);
		hair_middle.setRotationPoint(0F, 0F, 0F);
		hair_middle.setTextureSize(64, 32);
		hair_middle.mirror = true;
		setRotation(hair_middle, 0F, 0F, 0F);
		bill = new ModelRenderer(this, 16, 24);
		bill.addBox(-2F, -2F, -5F, 4, 1, 4);
		bill.setRotationPoint(0F, 0F, 0F);
		bill.setTextureSize(64, 32);
		bill.mirror = true;
		setRotation(bill, 0.3316126F, 0F, 0F);
		head = new ModelRenderer(this, 28, 0);
		head.addBox(-2.5F, -4F, -2F, 5, 4, 4);
		head.setRotationPoint(0F, 0F, 0F);
		head.setTextureSize(64, 32);
		head.mirror = true;
		setRotation(head, 0F, 0F, 0F);
		HEADBASE.addChild(hair_right);
		HEADBASE.addChild(hair_left);
		HEADBASE.addChild(hair_middle);
		HEADBASE.addChild(bill);
		HEADBASE.addChild(head);
		Lleg = new PixelmonModelRenderer(this, 0, 0);
		Lleg.setRotationPoint(2.237F, 1.112F, 0.21F);
		Lleg.addCustomModel(new ModelCustomWrapper(AdvancedModelLoader.loadModel("/pixelmon/client/models/objFiles/psyduck/LeftLeg.obj")));

		RLeg = new PixelmonModelRenderer(this, 0, 0);
		RLeg.setRotationPoint(-2.237F, 1.112F, 0.21F);
		RLeg.addCustomModel(new ModelCustomWrapper(AdvancedModelLoader.loadModel("/pixelmon/client/models/objFiles/psyduck/RightLeg.obj")));

		Body.addChild(Lleg);
		Body.addChild(RLeg);

		int degrees = 180;
		float radians = (float) Math.toRadians(degrees);

		setRotation(Body, radians, 0, 0);
		float legspeed = 0.5F;
		float legRotationLimit = 0.8F;

		ModuleLeg leftLeg = new ModuleLeg(Lleg, EnumLeg.FrontLeft, EnumPhase.InPhase, legRotationLimit, legspeed);
		ModuleLeg rightLeg = new ModuleLeg(RLeg, EnumLeg.FrontRight, EnumPhase.InPhase, legRotationLimit, legspeed);
		skeleton = new SkeletonBiped(Body, null, null, null, leftLeg, rightLeg, null);
	}

	public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
		super.render(entity, f, f1, f2, f3, f4, f5);
		setRotationAngles(f, f1, f2, f3, f4, f5, entity);
		right_foot.render(f5);
		left_foot.render(f5);
		lower_body.render(f5);
		mid_body.render(f5);
		upper_body.render(f5);
		left_wing.render(f5);
		right_wing.render(f5);
		tail.render(f5);
		HEADBASE.render(f5);
		setRotationAngles(f, f1, f2, f3, f4, f5);
		scale = 1.3f;
		Body.render(f5);
	}

	private void setRotation(ModelRenderer model, float x, float y, float z) {
	private void setRotation(PixelmonModelRenderer model, float x, float y, float z) {
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}

	public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity) {
		HEADBASE.rotateAngleX = f4 / 57.29578F;
		HEADBASE.rotateAngleY = f3 / 57.29578F;
		left_foot.rotateAngleX = MathHelper.cos(f * 1F) * .8F * f1;
		right_foot.rotateAngleX = MathHelper.cos(f * 1F + (float) Math.PI) * .8F * f1;
		tail.rotateAngleY = MathHelper.cos(f * 1F) * .8F * f1;
		left_wing.rotateAngleZ = MathHelper.cos(f * 0.6662F) * .5F * f1 - 1;
		right_wing.rotateAngleZ = MathHelper.cos(f * 0.6662F + (float) Math.PI) * .5F * f1 + 1;
	public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5) {
	}

}
