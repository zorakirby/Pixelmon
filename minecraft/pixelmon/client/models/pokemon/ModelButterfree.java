// Date: 8/4/2012 5:19:46 PM
// Date: 4/29/2013 4:31:52 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX
package pixelmon.client.models.pokemon;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;


import net.minecraftforge.client.model.AdvancedModelLoader;
import net.minecraftforge.client.model.IModelCustom;
import pixelmon.client.models.ModelCustomWrapper;
import pixelmon.client.models.PixelmonModelBase;
import pixelmon.client.models.PixelmonModelRenderer;
import pixelmon.client.models.animations.EnumArm;
import pixelmon.client.models.animations.EnumLeg;
import pixelmon.client.models.animations.EnumPhase;
import pixelmon.client.models.animations.ModuleArm;
import pixelmon.client.models.animations.ModuleHead;
import pixelmon.client.models.animations.ModuleLeg;
import pixelmon.client.models.animations.ModuleTailBasic;
import pixelmon.client.models.animations.biped.SkeletonBiped;
import pixelmon.client.models.animations.bird.SkeletonBird;

public class ModelButterfree extends ModelBase

public class ModelButterfree extends PixelmonModelBase
{
	// fields
	ModelRenderer BUTTERFREE;
	ModelRenderer HEADBASE;
	ModelRenderer RIGHTANTENNA;
	ModelRenderer LEFTANTENNA;
	ModelRenderer AntennaBaseR;
	ModelRenderer AntennaTipR;
	ModelRenderer AntennaBaseL;
	ModelRenderer AntennaTipL;
	ModelRenderer EyeR;
	ModelRenderer EyeL;
	ModelRenderer Head;
	ModelRenderer HeadTall;
	ModelRenderer HeadWide;
	ModelRenderer HeadThick;
	ModelRenderer Mouth;
	ModelRenderer NeckBR;
	ModelRenderer NeckFR;
	ModelRenderer NeckBL;
	ModelRenderer NeckFL;
	ModelRenderer Body;
	ModelRenderer BodyWide;
	ModelRenderer BodyThick;
	ModelRenderer UpperWingL;
	ModelRenderer UpperWingR;
	ModelRenderer PalmL;
	ModelRenderer FootR;
	ModelRenderer FootL;
	ModelRenderer PalmR;
    //fields

	public ModelButterfree() {
		textureWidth = 64;
		textureHeight = 32;
		setTextureOffset("BUTTERFREE.Butterfree", 0, 0);
    PixelmonModelRenderer Body, Head, LeftWing, RightWing;

		BUTTERFREE = new ModelRenderer(this, "BUTTERFREE");
		BUTTERFREE.setRotationPoint(0F, 0F, 0F);
		setRotation(BUTTERFREE, 0F, 0F, 0F);
		BUTTERFREE.mirror = true;
		NeckBR = new ModelRenderer(this, 6, 0);
		NeckBR.addBox(-1.5F, -1F, -1.5F, 3, 1, 3);
		NeckBR.setRotationPoint(-0.6F, 13F, 0F);
		NeckBR.setTextureSize(64, 32);
		NeckBR.mirror = true;
		setRotation(NeckBR, 0F, 0F, 0F);
		NeckFR = new ModelRenderer(this, 6, 0);
		NeckFR.addBox(-1.5F, -1F, -1.5F, 3, 1, 3);
		NeckFR.setRotationPoint(-0.6F, 13F, -0.5F);
		NeckFR.setTextureSize(64, 32);
		NeckFR.mirror = true;
		setRotation(NeckFR, 0F, 0F, 0F);
		NeckBL = new ModelRenderer(this, 6, 0);
		NeckBL.addBox(-1.5F, -1F, -1.5F, 3, 1, 3);
		NeckBL.setRotationPoint(0.6F, 13F, 0F);
		NeckBL.setTextureSize(64, 32);
		NeckBL.mirror = true;
		setRotation(NeckBL, 0F, 0F, 0F);
		NeckFL = new ModelRenderer(this, 6, 0);
		NeckFL.addBox(-1.5F, -1F, -1.5F, 3, 1, 3);
		NeckFL.setRotationPoint(0.6F, 13F, -0.5F);
		NeckFL.setTextureSize(64, 32);
		NeckFL.mirror = true;
		setRotation(NeckFL, 0F, 0F, 0F);
		Body = new ModelRenderer(this, 0, 23);
		Body.addBox(-2.5F, -2.5F, -2F, 5, 5, 4);
		Body.setRotationPoint(0F, 15.3F, 0F);
		Body.setTextureSize(64, 32);
		Body.mirror = true;
		setRotation(Body, 0.1047198F, 0F, 0F);
		BodyWide = new ModelRenderer(this, 0, 16);
		BodyWide.addBox(-3F, -2F, -1.5F, 6, 4, 3);
		BodyWide.setRotationPoint(0F, 15.5F, 0F);
		BodyWide.setTextureSize(64, 32);
		BodyWide.mirror = true;
		setRotation(BodyWide, 0.1047198F, 0F, 0F);
		BodyThick = new ModelRenderer(this, 0, 7);
		BodyThick.addBox(-2F, -2F, -2.5F, 4, 4, 5);
		BodyThick.setRotationPoint(0F, 15.5F, 0F);
		BodyThick.setTextureSize(64, 32);
		BodyThick.mirror = true;
		setRotation(BodyThick, 0.1047198F, 0F, 0F);
		UpperWingL = new ModelRenderer(this, 44, 16);
		UpperWingL.addBox(0F, -8F, 0F, 9, 15, 1);
		UpperWingL.setRotationPoint(1.8F, 13F, 2F);
		UpperWingL.setTextureSize(64, 32);
		UpperWingL.mirror = true;
		setRotation(UpperWingL, 0.0872665F, -0.5235988F, -0.0349066F);
		UpperWingL.mirror = false;
		UpperWingR = new ModelRenderer(this, 44, 0);
		UpperWingR.addBox(0F, -8F, 0F, 9, 15, 1);
		UpperWingR.setRotationPoint(-1.8F, 13F, 2F);
		UpperWingR.setTextureSize(64, 32);
		UpperWingR.mirror = true;
		setRotation(UpperWingR, -0.0872665F, -2.635447F, -0.0523599F);
		UpperWingR.mirror = false;
		PalmL = new ModelRenderer(this, 7, 4);
		PalmL.addBox(-0.5F, -1F, -1F, 1, 2, 1);
		PalmL.setRotationPoint(1.4F, 14.6F, -1.9F);
		PalmL.setTextureSize(64, 32);
		PalmL.mirror = true;
		setRotation(PalmL, 0.6632251F, 0.1745329F, 0F);
		FootR = new ModelRenderer(this, 0, 1);
		FootR.addBox(-0.5F, 0F, -0.5F, 1, 4, 2);
		FootR.setRotationPoint(-1.5F, 17.4F, -0.3F);
		FootR.setTextureSize(64, 32);
		FootR.mirror = true;
		setRotation(FootR, -0.1745329F, 0.3316126F, 0F);
		FootL = new ModelRenderer(this, 0, 1);
		FootL.addBox(-0.5F, 0F, -0.5F, 1, 4, 2);
		FootL.setRotationPoint(1.4F, 17.4F, -0.3F);
		FootL.setTextureSize(64, 32);
		FootL.mirror = true;
		setRotation(FootL, -0.1745329F, -0.3316126F, 0F);
		PalmR = new ModelRenderer(this, 6, 4);
		PalmR.addBox(-0.5F, -1F, -1F, 1, 2, 1);
		PalmR.setRotationPoint(-1.4F, 14.6F, -1.9F);
		PalmR.setTextureSize(64, 32);
		PalmR.mirror = true;
		setRotation(PalmR, 0.6632251F, -0.1745329F, 0F);
		HEADBASE = new ModelRenderer(this, "HEADBASE");
		HEADBASE.setRotationPoint(0F, 12.5F, 0.2F);
		setRotation(HEADBASE, 0F, 0F, 0F);
		HEADBASE.mirror = true;
		Mouth = new ModelRenderer(this, 18, 0);
		Mouth.addBox(-1F, -0.5F, -1F, 2, 1, 1);
		Mouth.setRotationPoint(0F, -0.8F, -2.5F);
		Mouth.setTextureSize(64, 32);
		Mouth.mirror = true;
		setRotation(Mouth, 0.0349066F, 0F, 0F);
		EyeR = new ModelRenderer(this, 18, 2);
		EyeR.addBox(-1F, -1F, -1F, 2, 2, 2);
		EyeR.setRotationPoint(-1.7F, -2.5F, -2.2F);
		EyeR.setTextureSize(64, 32);
		EyeR.mirror = true;
		setRotation(EyeR, 0F, 0.3490659F, -0.0872665F);
		EyeL = new ModelRenderer(this, 18, 2);
		EyeL.addBox(-1F, -1F, -1F, 2, 2, 2);
		EyeL.setRotationPoint(1.7F, -2.5F, -2.2F);
		EyeL.setTextureSize(64, 32);
		EyeL.mirror = true;
		setRotation(EyeL, 0F, -0.3490659F, 0.0872665F);
		EyeL.mirror = false;
		HeadThick = new ModelRenderer(this, 18, 16);
		HeadThick.addBox(-2F, -1.5F, -2.5F, 4, 3, 5);
		HeadThick.setRotationPoint(0F, -1.7F, -0.6F);
		HeadThick.setTextureSize(64, 32);
		HeadThick.mirror = true;
		setRotation(HeadThick, 0.0349066F, 0F, 0F);
		Head = new ModelRenderer(this, 18, 24);
		Head.addBox(-2.5F, -4F, -2.5F, 5, 4, 4);
		Head.setRotationPoint(0F, 0F, 0F);
		Head.setTextureSize(64, 32);
		Head.mirror = true;
		setRotation(Head, 0.0349066F, 0F, 0F);
		HeadWide = new ModelRenderer(this, 18, 10);
		HeadWide.addBox(-3F, -1.5F, -1.5F, 6, 3, 3);
		HeadWide.setRotationPoint(0F, -1.7F, -0.6F);
		HeadWide.setTextureSize(64, 32);
		HeadWide.mirror = true;
		setRotation(HeadWide, 0.0349066F, 0F, 0F);
		HeadTall = new ModelRenderer(this, 18, 6);
		HeadTall.addBox(-2F, -1F, -1.5F, 4, 1, 3);
		HeadTall.setRotationPoint(0F, -3.4F, -0.5F);
		HeadTall.setTextureSize(64, 32);
		HeadTall.mirror = true;
		setRotation(HeadTall, 0.0349066F, 0.0872665F, 0F);
		RIGHTANTENNA = new ModelRenderer(this, "RIGHTANTENNA");
		RIGHTANTENNA.setRotationPoint(-1F, -3.5F, -0.8F);
		setRotation(RIGHTANTENNA, 0F, 0F, 0F);
		RIGHTANTENNA.mirror = true;
		AntennaBaseR = new ModelRenderer(this, 27, 1);
		AntennaBaseR.addBox(0F, -4F, -0.5F, 0, 4, 1);
		AntennaBaseR.setRotationPoint(0F, 0F, 0F);
		AntennaBaseR.setTextureSize(64, 32);
		AntennaBaseR.mirror = true;
		setRotation(AntennaBaseR, 0.1745329F, 0.0872665F, -0.122173F);
		AntennaTipR = new ModelRenderer(this, 27, 1);
		AntennaTipR.addBox(0F, -3F, -0.5F, 0, 3, 1);
		AntennaTipR.setRotationPoint(-.5F, -3.7F, -.6F);
		AntennaTipR.setTextureSize(64, 32);
		AntennaTipR.mirror = true;
		setRotation(AntennaTipR, 0.5235988F, 0.0872665F, -0.122173F);
		LEFTANTENNA = new ModelRenderer(this, "LEFTANTENNA");
		LEFTANTENNA.setRotationPoint(1F, -3.5F, -0.8F);
		setRotation(LEFTANTENNA, 0F, 0F, 0F);
		LEFTANTENNA.mirror = true;
		AntennaBaseL = new ModelRenderer(this, 27, 1);
		AntennaBaseL.addBox(0F, -4F, -0.5F, 0, 4, 1);
		AntennaBaseL.setRotationPoint(0F, 0F, 0F);
		AntennaBaseL.setTextureSize(64, 32);
		AntennaBaseL.mirror = true;
		setRotation(AntennaBaseL, 0.1745329F, -0.0872665F, 0.122173F);
		AntennaTipL = new ModelRenderer(this, 27, 1);
		AntennaTipL.addBox(0F, -3F, -0.5F, 0, 3, 1);
		AntennaTipL.setRotationPoint(.5F, -3.7F, -.6F);
		AntennaTipL.setTextureSize(64, 32);
		AntennaTipL.mirror = true;
		setRotation(AntennaTipL, 0.5235988F, -0.0872665F, 0.122173F);
    public ModelButterfree()
    {
        textureWidth = 64;
        textureHeight = 32;
        Body = new PixelmonModelRenderer(this, "Body");
        Body.setRotationPoint(0, 35, 0);
        Body.addCustomModel(new ModelCustomWrapper(AdvancedModelLoader.loadModel("/pixelmon/client/models/objFiles/butterfree/Body.obj")));
        Head = new PixelmonModelRenderer(this, 0, 0);
        Head.addCustomModel(new ModelCustomWrapper(AdvancedModelLoader.loadModel("/pixelmon/client/models/objFiles/butterfree/Head.obj")));
        Head.setRotationPoint(-0.2F, 3, 0);
        LeftWing = new PixelmonModelRenderer(this, 0, 0);
        LeftWing.addCustomModel(new ModelCustomWrapper(AdvancedModelLoader.loadModel("/pixelmon/client/models/objFiles/butterfree/LeftWing.obj")));
        LeftWing.setRotationPoint(-0.2F, 3, -0.4F);
        RightWing = new PixelmonModelRenderer(this, 0, 0);
        RightWing.addCustomModel(new ModelCustomWrapper(AdvancedModelLoader.loadModel("/pixelmon/client/models/objFiles/butterfree/RightWing.obj")));
        RightWing.setRotationPoint(-0.2F, 3, -0.4F);
        Body.addChild(Head);
        Body.addChild(LeftWing);
        Body.addChild(RightWing);
        
        int degrees = 180;
        float radians = (float) Math.toRadians(degrees);
        
        setRotation(Body, radians, 0, 0);
        

		BUTTERFREE.addChild(HEADBASE);
		BUTTERFREE.addChild(NeckBR);
		BUTTERFREE.addChild(NeckFR);
		BUTTERFREE.addChild(NeckFL);
		BUTTERFREE.addChild(NeckBL);
		BUTTERFREE.addChild(Body);
		BUTTERFREE.addChild(BodyWide);
		BUTTERFREE.addChild(BodyThick);
		BUTTERFREE.addChild(UpperWingL);
		BUTTERFREE.addChild(UpperWingR);
		BUTTERFREE.addChild(PalmL);
		BUTTERFREE.addChild(FootL);
		BUTTERFREE.addChild(FootR);
		BUTTERFREE.addChild(PalmR);
		HEADBASE.addChild(LEFTANTENNA);
		HEADBASE.addChild(RIGHTANTENNA);
		RIGHTANTENNA.addChild(AntennaTipR);
		RIGHTANTENNA.addChild(AntennaBaseR);
		LEFTANTENNA.addChild(AntennaBaseL);
		LEFTANTENNA.addChild(AntennaTipL);
		HEADBASE.addChild(Mouth);
		HEADBASE.addChild(EyeR);
		HEADBASE.addChild(EyeL);
		HEADBASE.addChild(HeadThick);
		HEADBASE.addChild(Head);
		HEADBASE.addChild(HeadWide);
		HEADBASE.addChild(HeadTall);
        float legspeed = 0.5F;
        float legRotationLimit = 1.4F;
        
        ModuleHead headModule = new ModuleHead(Head);
        
        skeleton = new SkeletonBiped(Body, headModule, null, null, null, null, null);
    }

	}
    public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
    {
        super.render(entity, f, f1, f2, f3, f4, f5);
        setRotationAngles(f, f1, f2, f3, f4, f5);
        Body.render(f5);
        scale = 3.5F;
    }

	public void render(Entity entity, float f, float f1, float f2, float f3,
			float f4, float f5) {
		super.render(entity, f, f1, f2, f3, f4, f5);
		setRotationAngles(f, f1, f2, f3, f4, f5, entity);
		BUTTERFREE.render(f5);
	}
    private void setRotation(PixelmonModelRenderer model, float x, float y, float z)
    {
        model.rotateAngleX = x;
        model.rotateAngleY = y;
        model.rotateAngleZ = z;
    }

	private void setRotation(ModelRenderer model, float x, float y, float z) {
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}

	public void setRotationAngles(float f, float f1, float f2, float f3,
			float f4, float f5, Entity entity) {
		super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
		UpperWingL.rotateAngleY = MathHelper.cos(f2 + 3.14159F) * .5F - .5F;
		UpperWingR.rotateAngleY = MathHelper.cos(f2) * .5F + 3.5F;
		HEADBASE.rotateAngleX = f4 / 57.29578F;
		HEADBASE.rotateAngleY = f3 / 57.29578F;
		BUTTERFREE.rotationPointY = MathHelper.cos(.5F * f2) * 3F;
		LEFTANTENNA.rotateAngleX = MathHelper.cos(.5F * f2 + 3.14159F) * .2F + .2F;
		RIGHTANTENNA.rotateAngleX = MathHelper.cos(.5F * f2 + 3.14159F + .3F) * .2F + .2F;
		FootL.rotateAngleX = MathHelper.cos(.5F * f2 + 3.14159F) * .2F - .2F;
		FootR.rotateAngleX = MathHelper.cos(.5F * f2 + 3.5F + .3F) * .2F - .2F;
	}

    public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5)
    {
    	LeftWing.rotateAngleY = MathHelper.cos(f2 + 3.14159F) * .5F - 37F;
		RightWing.rotateAngleY = MathHelper.cos(f2) * .5F + 37F;
    }
}
